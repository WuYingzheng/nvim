#! /usr/bin/env python3
# -*- coding:utf-8 -*-
# Copyright 2018-  <linrongbin16@gmail.com>

import sys
import os
import base64
from urllib import parse
import getopt

sys.path.append(".")
import util


def _help():
    msg = """usage: vencode [option] text

  Encode and decode text with algorithms.

option:
  -e/--encode [algorithm]       encode text with specified algorithm
  -d/--decode [algorithm]       decode text with specified algorithm

  -h/--help                     show help message

algorithm:
  base64                        base64 algorithm
  url                           url algorithm

example:
  $ vencode -ebase64 'Hello World'
  Hello World => SGVsbG8gV29ybGQ=
"""
    print(msg)
    exit(0)


def _encode_base64(s):
    b = s.encode("UTF-8")
    b = base64.b64encode(b)
    print("%s => %s" % (s, b.decode("UTF-8")))


def _decode_base64(s):
    b = s.encode("UTF-8")
    b = base64.b64decode(b)
    print("%s => %s" % (s, b.decode("UTF-8")))


def _encode_url(s):
    print("%s => %s" % (s, parse.quote(s)))


def _decode_url(s):
    print("%s => %s" % (s, parse.unquote(s)))


if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(
            sys.argv[1:],
            "e:d:h",
            ["encode=", "decode=", "help"],
        )
        for opt in opts:
            if opt[0] in ("-h", "--help"):
                _help()
        for opt in opts:
            if opt[0] in ("-e", "--encode"):
                if opt[1] == "base64":
                    for a in args:
                        _encode_base64(a)
                elif opt[1] == "url":
                    for a in args:
                        _encode_url(a)
            elif opt[0] in ("-d", "--decode"):
                if opt[1] == "base64":
                    for a in args:
                        _decode_base64(a)
                elif opt[1] == "url":
                    for a in args:
                        _decode_url(a)
        _help()
    except getopt.GetoptError as e:
        print(e)
        _help()
    except Exception as e:
        print(e)
