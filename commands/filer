#! /usr/bin/env python3
# -*- coding:utf-8 -*-
# Copyright 2018-  <linrongbin16@gmail.com>
''' File operations in current folder. '''

import sys
import os
import getopt
sys.path.append('.')
import util

name = util.get_command_name()

help_msg='''File operations in current folder.

usage:
    %s [option] -d/--delete <filetype>              delete all files that has <filetype>.
    %s [option] -r/--replace <old> <new> <filetype> replace <old> with <new> for all files that has <filetype>.
    %s [option] -l/--list <filetype>                list all files that has <filetype>.

option:
    --hidden                                        don't skip hidden folder that starts with '.', eg: '.git', '.svn', by default skip hidden.

flag:
    %s -h/--help                                    show help message.
''' % (name, name, name, name)


def help():
    print(help_msg)
    exit(0)

def file_replace(filetype, old, new, skip_hidden):
    root = os.getcwd()
    files = [os.path.relpath(f, root) for f in util.recursive_list_dir('.')]
    filetype = '.%s' % (filetype)
    for f in files:
        if skip_hidden is True and f.startswith('.'):
            continue
        if not f.endswith(filetype):
            continue
        try:
            with open(f, 'r') as fp:
                content = fp.read()
                fp.close()
            with open(f, 'w') as fp:
                new_content = content.replace(old, new)
                fp.write(new_content)
        except Exception as e:
            print("Error! replace <%s> with <%s> in <%s> exception:%s" % (old, new, f, str(e)))
    exit(0)

def file_delete(filetype, skip_hidden):
    root = os.getcwd()
    files = [os.path.relpath(f, root) for f in util.recursive_list_dir('.')]
    filetype = '.%s' % filetype
    for f in files:
        relname = os.path.relpath(f)
        if skip_hidden is True and relname.startswith('.'):
            continue
        if relname.endswith(filetype):
            print('[lin-boost] remove %s' % f)
            os.remove(f)
    exit(0)

def file_list(filetype, skip_hidden):
    root = os.getcwd()
    files = [os.path.relpath(f, root) for f in util.recursive_list_dir('.')]
    filetype = '.%s' % filetype
    for f in files:
        if skip_hidden is True and f.startswith('.'):
            continue
        if f.endswith(filetype):
            print('%s' % (os.path.relpath(f, root)))
    exit(0)


if __name__=='__main__':
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'd:r:l:h', ['delete=', 'replace=', 'list=', 'hidden', 'help'])
        skip_hidden = True
        for opt in opts:
            if opt[0] in ('--hidden'):
                skip_hidden = False
                break
        for opt in opts:
            if opt[0] in ('-d', '--delete'):
                file_delete(opt[1], skip_hidden)
            elif opt[0] in ('-r', '--replace'):
                file_replace(opt[1], None, None, skip_hidden)
            elif opt[0] in ('-l', '--list'):
                file_list(opt[1], skip_hidden)
            elif opt[0] in ('-h', '--help'):
                help()
        help()
    except getopt.GetoptError as e:
        print(str(e) + '\n')
        help()
